var group__group__unused =
[
    [ "gerfs: Refine solution", "group__magma__gerfs.html", null ],
    [ "porfs: Refine solution", "group__magma__porfs.html", null ],
    [ "hetrs: symmetric/Hermitian indefinite forward and back solves", "group__magma__hetrs.html", null ],
    [ "hetri: symmetric/Hermitian indefinite inverse", "group__magma__hetri.html", null ],
    [ "herfs: Refine solution", "group__magma__herfs.html", null ],
    [ "sysv:  Solves Ax = b using symmetric indefinite factorization (driver)", "group__magma__sysv.html", null ],
    [ "sytrf: Symmetric indefinite factorization (Bunch-Kaufman pivoting)", "group__magma__sytrf.html", null ],
    [ "sytrf: Symmetric indefinite factorization (Aasen)", "group__magma__sytrf__aasen.html", null ],
    [ "sytrs: Symmetric indefinite forward and back solves", "group__magma__sytrs.html", null ],
    [ "sytri: Symmetric indefinite inverse", "group__magma__sytri.html", null ],
    [ "syrfs: Refine solution", "group__magma__syrfs.html", null ],
    [ "lasyf: Partial factorization; used by sytrf", "group__magma__lasyf.html", null ],
    [ "or/unmhr: Multiply by Q from Hessenberg reduction", "group__magma__unmhr.html", null ],
    [ "lahrd: Partial factorization; used by gehrd", "group__magma__lahrd.html", null ],
    [ "laex2: Merge two sets of eigenvalues.", "group__magma__laex2.html", null ],
    [ "larf:  Apply Householder reflector to general matrix", "group__magma__larf.html", null ],
    [ "larft: Generate T matrix for block of Householder reflectors", "group__magma__larft.html", null ],
    [ "lantr:    Triangular matrix norm", "group__magma__lantr.html", null ],
    [ "sy/heev:   Solves using QR iteration (driver)", "group__magma__heev.html", null ],
    [ "sy/heevrx: Solves using MRRR (expert)", "group__magma__heevrx.html", null ],
    [ "sy/hegv:   Solves using QR iteration (driver)", "group__magma__hegv.html", null ],
    [ "sy/hegvrx: Solves using MRRR (expert)", "group__magma__hegvrx.html", null ]
];
!===============================================================================
! Copyright 2008-2017 Intel Corporation All Rights Reserved.
!
! The source code,  information  and material  ("Material") contained  herein is
! owned by Intel Corporation or its  suppliers or licensors,  and  title to such
! Material remains with Intel  Corporation or its  suppliers or  licensors.  The
! Material  contains  proprietary  information  of  Intel or  its suppliers  and
! licensors.  The Material is protected by  worldwide copyright  laws and treaty
! provisions.  No part  of  the  Material   may  be  used,  copied,  reproduced,
! modified, published,  uploaded, posted, transmitted,  distributed or disclosed
! in any way without Intel's prior express written permission.  No license under
! any patent,  copyright or other  intellectual property rights  in the Material
! is granted to  or  conferred  upon  you,  either   expressly,  by implication,
! inducement,  estoppel  or  otherwise.  Any  license   under such  intellectual
! property rights must be express and approved by Intel in writing.
!
! Unless otherwise agreed by Intel in writing,  you may not remove or alter this
! notice or  any  other  notice   embedded  in  Materials  by  Intel  or Intel's
! suppliers or licensors in any way.
!===============================================================================

!  Content:
!      Intel(R) Math Kernel Library (Intel(R) MKL) FORTRAN interface for BLAS-like
!      extensions
!*******************************************************************************

      INTERFACE
      subroutine MKL_SIMATCOPY ( ordering, trans, rows, cols, alpha,           &
     &AB, lda, ldb )
      character*1        ordering, trans
      integer            rows, cols, lda, ldb
      real               alpha
      real               AB( * )
      END
      END INTERFACE

      INTERFACE
      subroutine MKL_DIMATCOPY ( ordering, trans, rows, cols, alpha,           &
     &AB, lda, ldb )
      character*1        ordering, trans
      integer            rows, cols, lda, ldb
      double precision   alpha
      double precision   AB( * )
      END
      END INTERFACE

      INTERFACE
      subroutine MKL_CIMATCOPY ( ordering, trans, rows, cols, alpha,           &
     &AB, lda, ldb )
      character*1        ordering, trans
      integer            rows, cols, lda, ldb
      complex            alpha
      complex            AB( * )
      END
      END INTERFACE

      INTERFACE
      subroutine MKL_ZIMATCOPY ( ordering, trans, rows, cols, alpha,           &
     &AB, lda, ldb )
      character*1        ordering, trans
      integer            rows, cols, lda, ldb
      double complex     alpha
      double complex     AB( * )
      END
      END INTERFACE

      INTERFACE
      subroutine MKL_SOMATCOPY ( ordering, trans, rows, cols, alpha,           &
     &A, lda, B, ldb )
      character*1        ordering, trans
      integer            rows, cols, lda, ldb
      real               alpha
      real               A( * )
      real               B( * )
      END
      END INTERFACE

      INTERFACE
      subroutine MKL_DOMATCOPY ( ordering, trans, rows, cols, alpha,           &
     &A, lda, B, ldb )
      character*1        ordering, trans
      integer            rows, cols, lda, ldb
      double precision   alpha
      double precision   A( * )
      double precision   B( * )
      END
      END INTERFACE

      INTERFACE
      subroutine MKL_COMATCOPY ( ordering, trans, rows, cols, alpha,           &
     &A, lda, B, ldb )
      character*1        ordering, trans
      integer            rows, cols, lda, ldb
      complex            alpha
      complex            A( * )
      complex            B( * )
      END
      END INTERFACE

      INTERFACE
      subroutine MKL_ZOMATCOPY ( ordering, trans, rows, cols, alpha,           &
     &A, lda, B, ldb )
      character*1        ordering, trans
      integer            rows, cols, lda, ldb
      double complex     alpha
      double complex     A( * )
      double complex     B( * )
      END
      END INTERFACE

      INTERFACE
      subroutine MKL_SOMATCOPY2 ( ordering, trans, rows, cols, alpha,          &
     &A, lda, stridea, B, ldb, strideb )
      character*1        ordering, trans
      integer            rows, cols, lda, stridea, ldb, strideb
      real               alpha
      real               A( * )
      real               B( * )
      END
      END INTERFACE

      INTERFACE
      subroutine MKL_DOMATCOPY2 ( ordering, trans, rows, cols, alpha,          &
     &A, lda, stridea, B, ldb, strideb )
      character*1        ordering, trans
      integer            rows, cols, lda, stridea, ldb, strideb
      double precision   alpha
      double precision   A( * )
      double precision   B( * )
      END
      END INTERFACE

      INTERFACE
      subroutine MKL_COMATCOPY2 ( ordering, trans, rows, cols, alpha,          &
     &A, lda, stridea, B, ldb, strideb )
      character*1        ordering, trans
      integer            rows, cols, lda, stridea, ldb, strideb
      complex            alpha
      complex            A( * )
      complex            B( * )
      END
      END INTERFACE

      INTERFACE
      subroutine MKL_ZOMATCOPY2 ( ordering, trans, rows, cols, alpha,          &
     &A, lda, stridea, B, ldb, strideb )
      character*1        ordering, trans
      integer            rows, cols, lda, stridea, ldb, strideb
      double complex     alpha
      double complex     A( * )
      double complex     B( * )
      END
      END INTERFACE

      INTERFACE
      subroutine MKL_SOMATADD ( ordering, transa, transb, rows, cols,          &
     &alpha, A, lda, beta, B, ldb, C, ldc )
      character*1        ordering, transa, transb
      integer            rows, cols, lda, ldb, ldc
      real               alpha, beta
      real               A( * )
      real               B( * )
      real               C( * )
      END
      END INTERFACE

      INTERFACE
      subroutine MKL_DOMATADD ( ordering, transa, transb, rows, cols,          &
     &alpha, A, lda, beta, B, ldb, C, ldc )
      character*1        ordering, transa, transb
      integer            rows, cols, lda, ldb, ldc
      double precision   alpha, beta
      double precision   A( * )
      double precision   B( * )
      double precision   C( * )
      END
      END INTERFACE

      INTERFACE
      subroutine MKL_COMATADD ( ordering, transa, transb, rows, cols,          &
     &alpha, A, lda, beta, B, ldb, C, ldc )
      character*1        ordering, transa, transb
      integer            rows, cols, lda, ldb, ldc
      complex            alpha, beta
      complex            A( * )
      complex            B( * )
      complex            C( * )
      END
      END INTERFACE

      INTERFACE
      subroutine MKL_ZOMATADD ( ordering, transa, transb, rows, cols,          &
     &alpha, A, lda, beta, B, ldb, C, ldc )
      character*1        ordering, transa, transb
      integer            rows, cols, lda, ldb, ldc
      double complex     alpha, beta
      double complex     A( * )
      double complex     B( * )
      double complex     C( * )
      END
      END INTERFACE

!*******************************************************************************
